---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xnopresources.nop.example.org
spec:
  compositeTypeRef:
    apiVersion: nop.example.org/v1alpha1
    kind: XNopResource
  mode: Pipeline
  pipeline:
  - step: conditional-patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      condition:
         expression: observed.composite.resource.spec.env == "dev" && observed.composite.resource.spec.render == true 
      resources:
         - name: test-resource
           base:
            apiVersion: nop.crossplane.io/v1alpha1
            kind: NopResource
            spec:
              forProvider:
                fields:
                  integerField: 42
                  stringField: "string"
                  objectField:
                    stringField: "object"
                  arrayField:
                  - stringField: "array"
                conditionAfter:
                - time: 5s
                  conditionType: Ready
                  conditionStatus: "True"
                connectionDetails:
                - name: username
                  value: fakeuser
                - name: password
                  value: verysecurepassword
                - name: endpoint
                  value: 127.0.0.1
  - step:
    functionRef:
      name: function-unit-test
    input:
      apiVersion: unittest.fn.crossplane.io/v1beta1
      kind: TestCases
      errorOnFailedTest: true
      testCases:
      - description: "test pass"
        assert: observed.composite.resource.spec.env == "dev"
      - description: "test fail"
        assert: observed.composite.resource.spec.env == "prod"
      - description: "test error"
        assert: a == b
      - assert: desired.resources.all(r, r.kind != "")
        description: all resources have a Kind defined

